{"version":3,"sources":["Card3D.js","GrayScale.js","Cloud.js","app.js"],"names":["Card3D","obj","_this","this","_classCallCheck","varDebounce","card","document","querySelector","layer1","layer2","layer3","layer4","arr_layers","tiltAngle","axialDisplacement","addEventListener","mainAnimate","bind","e","removeAttribute","setTimeout","returnToPlace","_this2","clearTimeout","getBoundingClientRect","layerX","offset_y","offsetY","layerY","rect","width","y","height","elementDirectionalShift","x","item","offsetX","transform","concat","i","offset_x","length","style","GrayScale","glass","block_parent","relativeCoords","classList","contains","remove","bounds","target","clientX","left","clientY","top","add","window","mixBlendMode_variable_arr","cloud__circle","opacity","duration","forEach","animate","mixBlendMode","switchMode","setInterval","objCard3D"],"mappings":"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","file":"app.min.js","sourcesContent":["class Card3D { /* Анимация, - \"Ожившее фото\" */\r\n    constructor(obj) {\r\n        this.varDebounce = 0; // ТаймАут срабатывания всей анимации\r\n        this.card = document.querySelector(obj.card); // Анимируемый блок\r\n        this.layer1 = document.querySelector(obj.layer1); // Анимируемый слой 1\r\n        this.layer2 = document.querySelector(obj.layer2); // Анимируемый слой 2\r\n        this.layer3 = document.querySelector(obj.layer3); // Анимируемый слой 3\r\n        this.layer4 = document.querySelector(obj.layer4); // Анимируемый слой 4\r\n        this.arr_layers = [this.layer1, this.layer2, this.layer3, this.layer4];\r\n        this.tiltAngle = obj.tiltAngle || 10; // угол отклонения в градусах\r\n        this.axialDisplacement = obj.axialDisplacement || 50; // Смещение по оси Z\r\n\r\n        this.card.addEventListener('mousemove', this.mainAnimate.bind(this));\r\n\r\n        this.card.addEventListener('mouseleave', (e) => {\r\n            setTimeout(() => {\r\n                this.card.removeAttribute('style');\r\n                this.returnToPlace();\r\n            }, 150)\r\n        })\r\n\r\n        this.card.addEventListener('mouseout', (e) => {\r\n            setTimeout(() => {\r\n                this.card.removeAttribute('style');\r\n                this.returnToPlace();\r\n            }, 150)\r\n        })\r\n    }\r\n\r\n    mainAnimate(e) {\r\n        clearTimeout(this.varDebounce);\r\n        this.varDebounce = setTimeout(() => {\r\n            let rect = e.target.getBoundingClientRect();\r\n            let offset_x = e.offsetX || e.layerX\r\n            let offset_y = e.offsetY || e.layerY\r\n            let x = 100 * offset_x / rect.width;\r\n            let y = 100 * offset_y / rect.height;\r\n\r\n            this.returnToPlace();\r\n\r\n            if (x < 50 && y < 50) {\r\n                this.elementDirectionalShift(this.tiltAngle, -this.tiltAngle)\r\n            } else if (x > 50 && y < 50) {\r\n                this.elementDirectionalShift(this.tiltAngle, this.tiltAngle)\r\n            } else if (x < 50 && y > 50) {\r\n                this.elementDirectionalShift(-this.tiltAngle, -this.tiltAngle)\r\n            } else if (x > 50 && y > 50) {\r\n                this.elementDirectionalShift(-this.tiltAngle, this.tiltAngle)\r\n            }\r\n\r\n        }, 10);\r\n    }\r\n\r\n    returnToPlace() {\r\n        this.arr_layers.forEach(item => item.removeAttribute('style'));\r\n    }\r\n\r\n    elementDirectionalShift(x, y) {\r\n        this.card.style.transform = `perspective(1200px) rotateX(${x}deg) rotateY(${y}deg)`;\r\n        for (let i = 0; i < this.arr_layers.length; i++) {\r\n            this.arr_layers[i].style.transform = `perspective(1200px) rotateX(${x}deg) rotateY(${y}deg) translateZ(${(i + 1) * this.axialDisplacement}px)`;\r\n        }\r\n    }\r\n}","class GrayScale { /* Анимация, - \"Цветной зум\" */\r\n    constructor(obj) {\r\n        this.glass = document.querySelector(obj.glass);\r\n        this.block_parent = document.querySelector(obj.block_parent);\r\n\r\n        this.block_parent.addEventListener('mousemove', this.relativeCoords.bind(this));\r\n        this.block_parent.addEventListener('mouseleave', () => (this.glass.classList.contains('opacityShow')) ? this.glass.classList.remove('opacityShow') : '');\r\n        this.block_parent.addEventListener('mouseout', () => (this.glass.classList.contains('opacityShow')) ? this.glass.classList.remove('opacityShow') : '');\r\n    }\r\n\r\n    relativeCoords(e) {\r\n        let bounds = e.target.getBoundingClientRect();\r\n        let x = (e.clientX - 42) - bounds.left;\r\n        let y = (e.clientY - 42) - bounds.top;\r\n        (!this.glass.classList.contains('opacityShow')) ? this.glass.classList.add('opacityShow') : '';\r\n        this.glass.style.left = x + 'px';\r\n        this.glass.style.top = y + 'px';\r\n        this.glass.style.backgroundPositionX = -x + 'px';\r\n        this.glass.style.backgroundPositionY = -y + 'px';\r\n    }\r\n}","window.addEventListener('load', () => {\r\n\r\n    let mixBlendMode_variable_arr = [\r\n        'normal',\r\n        'multiply',\r\n        'screen',\r\n        'overlay',\r\n        'darken',\r\n        'lighten',\r\n        'color-burn',\r\n        'hard-light',\r\n        'soft-light',\r\n        'hue',\r\n        'saturation',\r\n        'color',\r\n        'luminosity',\r\n    ];\r\n    let cloud__circle = document.querySelector('.cloud__circle');\r\n\r\n    function switchMode () {\r\n        let i = 1\r\n        mixBlendMode_variable_arr.forEach(item => {\r\n            setTimeout( () => {\r\n\r\n                cloud__circle.animate([\r\n                    {opacity: 1},\r\n                    {opacity: 0},\r\n                    {opacity: 1}\r\n                ], {duration: 1000});\r\n\r\n                cloud__circle.style.mixBlendMode = `${item}`\r\n            }, i * 5000)\r\n            i++;\r\n        })\r\n    }\r\n    switchMode();\r\n\r\n    setInterval(() => {\r\n        switchMode();\r\n    }, mixBlendMode_variable_arr.length * 5000)\r\n\r\n})","window.addEventListener('load', () => {\r\n\r\n    // Анимация, - \"Ожившее фото\"\r\n    let objCard3D = {\r\n        card: '.animBlockPhoto', // Анимируемый блок\r\n        layer1: '.layer1', // Анимируемый слой 1\r\n        layer2: '.layer2', // Анимируемый слой 2\r\n        layer3: '.layer3', // Анимируемый слой 3\r\n        layer4: '.layer4', // Анимируемый слой 4\r\n        tiltAngle: 11, // угол отклонения в градусах\r\n        axialDisplacement: 40, // Смещение по оси Z || Каждый новый слой смещается на (i++ + 1) * axialDisplacement px\r\n    }\r\n    new Card3D(objCard3D);\r\n\r\n    // Анимация, - \"Цветной зум\"\r\n    let objGrayScale = {\r\n        glass: '.glass-search',\r\n        block_parent: '.anim-city',\r\n    };\r\n\r\n    new GrayScale(objGrayScale);\r\n})\r\n"]}